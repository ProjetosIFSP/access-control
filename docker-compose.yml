name: access-control-server

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    networks:
      - access-control-network
    restart: unless-stopped

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgres://docker:docker@db:5432/access-control
    depends_on:
      - db
    networks:
      - access-control-network
    restart: unless-stopped

  iot:
    build:
      context: ./iot
      dockerfile: Dockerfile.mqtt
    ports:
      # MQTT e MQTT over WebSockets
      - "1883:1883"
      - "9001:9001"
    environment:
      API_BASE_URL: http://server:3000
      MQTT_PORT: 1883
      MQTT_WS_PORT: 9001
    depends_on:
      - server
    networks:
      - access-control-network
    restart: unless-stopped

  db:
    image: postgres:17.6
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=access-control
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - access-control-network

# Define as redes customizadas para a aplicação.
# Usar uma rede customizada permite que os contêineres se comuniquem uns com os outros
# usando seus nomes de serviço como hostname (ex: 'server' se conecta a 'db').
networks:
  access-control-network:
    driver: bridge

volumes:
  postgres_data:
