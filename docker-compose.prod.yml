services:
  web:
    image: ghcr.io/projetosifsp/access-control-web:latest
    ports:
      - "8080:80"
    networks:
      - app-network
    restart: unless-stopped

  server:
    image: ghcr.io/projetosifsp/access-control-server:latest
    ports:
      - "3001:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - app-network
    restart: unless-stopped

  iot:
    image: ghcr.io/projetosifsp/access-control-iot:latest
    ports:
      - "1883:1883"
      - "9001:9001"
    environment:
      API_BASE_URL: http://server:3000
      MQTT_PORT: 1883
      MQTT_WS_PORT: 9001
    depends_on:
      - server
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: user_db
      POSTGRES_PASSWORD: password_db
      POSTGRES_DB: app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
